person = .elem(
name = "Jane Doe",
age = 25,
address = .elem(street = "123 Main St", city = "Springfield"),
"This is a text node"
)
)
devtools::load_all(".")
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
b <- xmlbuilder(allow_fragments = FALSE)
b$comment("This is an xml comment")
b$start("homeless")
b$start("person", id = "1")
b$element("name", "John Doe")
b$element("age", 30)
b$start("address")
b$element("street", "123 Main St")
b$element("city", "Anytown")
b$element("state", "CA")
b$element("zip", 12345)
b$end("address")
b$end("person")
b$start("person", id = "2")
b$element("name", "Jane Doe")
b$element("age", 25)
b$start("address")
b$element("street", "321 Main St")
b$element("city", "Anytown")
b$element("state", "CA")
b$element("zip", 54321)
b$end("address")
b$end("person")
b$end("homeless")
# includes a xml prolog and comment
b
as.character(b)
# only contains the actual nodes
xml2::as_xml_document(b)
devtools::run_examples()
devtools::load_all(".")
source("~/Documents/R/xmlwriter/inst/tinytest/test_xmlwriter.R", echo=TRUE)
devtools::load_all(".")
pkgload::dev_help('.tags')
devtools::load_all(".")
pkgload::dev_help('.tags')
devtools::load_all(".")
devtools::load_all(".")
install.packages("XML")
devtools::load_all(".")
devtools::load_all(".")
# use fragments
xb <- xml_builder()
# use fragments
xb <- xmlbuilder()
xb$start("study")
xb
xb$start("study")
xb$fragment(
person = .tags(
name = "John Doe",
age = 30
),
person = .tags(
name = "Jane Doe",
age = 25
)
)
as.list(NULL)
.tags
lapply(NULL, as.character)
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::run_examples()
devtools::load_all(".")
devtools::run_examples()
xb$start("study")
xb$fragment(
person = .tags(
name = "John Doe",
age = 30
),
person = .tags(
name = "Jane Doe",
age = 25
)
)
devtools::load_all(".")
xb$start("study")
xb$fragment(
person = .tags(
name = "John Doe",
age = 30
),
person = .tags(
name = "Jane Doe",
age = 25
)
)
devtools::load_all(".")
# use fragments
xb <- xmlbuilder()
xb$start("study")
xb$fragment(
person = .tags(
name = "John Doe",
age = 30
),
person = .tags(
name = "Jane Doe",
age = 25
)
)
xb$end("study")
xb
devtools::load_all(".")
devtools::run_examples()
xb
xb$start("fiets")
xb
devtools::load_all(".")
xb
xb <- xmlbuilder()
xb
xb$start("dfas")
xb
xb$start("dfas")
xb
xb$start("two")
xv
xvb
xb
devtools::load_all(".")
xb <- xmlbuilder()
xb$start("one")
xb$start("two")
xb
devtools::load_all(".")
xb <- xmlbuilder()
xb$start("one")
xb$start("two")
xb
devtools::load_all(".")
xb <- xmlbuilder()
xb$start("one")
xb$start("two")
xb
devtools::load_all(".")
xb <- xmlbuilder()
xb$start("one")
xb$start("two")
xb
xb <- xmlbuilder()
xb$start("one")
xb$start("two")
xb
library(xmlwriter)
b <- xmlbuilder(allow_fragments = FALSE)
b$comment("This is an xml comment")
b$start("homeless")
b$start("person", id = "1")
b$element("name", "John Doe")
b$element("age", 30)
b$start("address")
b$element("street", "123 Main St")
b$element("city", "Anytown")
b$element("state", "CA")
b$element("zip", 12345)
b$end("address")
b$end("person")
b$start("person", id = "2")
b$element("name", "Jane Doe")
b$element("age", 25)
b$start("address")
b$element("street", "321 Main St")
b$element("city", "Anytown")
b$element("state", "CA")
b$element("zip", 54321)
b$end("address")
b$end("person")
b$fragment(
person = .tags(
name = "Jim Doe",
age = 35
)
)
b$end("homeless")
# includes a xml prolog and comment
b
as.character(b)
# only contains the actual nodes
xml2::as_xml_document(b)
library(xmlwriter)
b <- xmlbuilder(allow_fragments = FALSE)
b$comment("This is an xml comment")
b$start("homeless")
b$start("person", id = "1")
b$element("name", "John Doe")
b$element("age", 30)
b$start("address")
b$element("street", "123 Main St")
b$element("city", "Anytown")
b$element("state", "CA")
b$element("zip", 12345)
b$end("address")
b$end("person")
b$start("person", id = "2")
b$element("name", "Jane Doe")
b$element("age", 25)
b$start("address")
b$element("street", "321 Main St")
b$element("city", "Anytown")
b$element("state", "CA")
b$element("zip", 54321)
b$end("address")
b$end("person")
b$fragment(
person = .tags(
.attr = c(id = "3"),
name = "Jim Doe",
age = 35
)
)
b$end("homeless")
# includes a xml prolog and comment
b
as.character(b)
# only contains the actual nodes
xml2::as_xml_document(b)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?utils
packageDescription("xmlwriter")
read.dcf("./DESCRIPTION")
devtools::load_all(".")
pkgload::dev_help('list_as_xml_string')
?xmlwriter
devtools::load_all(".")
x <- xml_fragment(a = "test")
x
as_list(x)
as.list(x)
as_list(x)
devtools::load_all(".")
read_fragment("<a>test</b>")
read_fragment("<a>test</a>")
read_fragment("<a>test</a>") |> str()
read_fragment("<a id='1'>test</a>") |> str()
library(microbenchmark)
library(xml2)
library(xmlwriter)
# read in a sample 600k xml file as a R list str
doc <- xml2::read_xml("./example/DataGeneric.xml")
doc_list <- xml2::as_list(doc)
# just copy the list and set an extra attribute class="xml_fragment"
# making it a xml_fragment object
doc_fragment <- structure(doc_list, class = "xml_fragment")
# see how long it takes to create an xml document with xml2 and xmlwriter
microbenchmark(
# xml2      = xml2::as_xml_document(doc_list),
xmlwriter = xml2::as_xml_document(doc_fragment),
times.    = 1
)
library(microbenchmark)
library(xml2)
library(xmlwriter)
# read in a sample 600k xml file as a R list str
doc <- xml2::read_xml("./example/DataGeneric.xml")
doc_list <- xml2::as_list(doc)
# just copy the list and set an extra attribute class="xml_fragment"
# making it a xml_fragment object
doc_fragment <- structure(doc_list, class = "xml_fragment")
# see how long it takes to create an xml document with xml2 and xmlwriter
microbenchmark(
# xml2      = xml2::as_xml_document(doc_list),
xmlwriter = xml2::as_xml_document(doc_fragment),
times.    = 1
)
library(microbenchmark)
library(xml2)
library(xmlwriter)
# read in a sample 600k xml file as a R list str
doc <- xml2::read_xml("./example/DataGeneric.xml")
doc_list <- xml2::as_list(doc)
# just copy the list and set an extra attribute class="xml_fragment"
# making it a xml_fragment object
doc_fragment <- structure(doc_list, class = "xml_fragment")
# see how long it takes to create an xml document with xml2 and xmlwriter
microbenchmark(
# xml2      = xml2::as_xml_document(doc_list),
xmlwriter = xml2::as_xml_document(doc_fragment),
times.    = 10
)
library(microbenchmark)
library(xml2)
library(xmlwriter)
# read in a sample 600k xml file as a R list str
doc <- xml2::read_xml("./example/DataGeneric.xml")
doc_list <- xml2::as_list(doc)
# just copy the list and set an extra attribute class="xml_fragment"
# making it a xml_fragment object
doc_fragment <- structure(doc_list, class = "xml_fragment")
# see how long it takes to create an xml document with xml2 and xmlwriter
microbenchmark(
# xml2      = xml2::as_xml_document(doc_list),
xmlwriter = xml2::as_xml_document(doc_fragment),
times.    = 10
)
library(microbenchmark)
library(xml2)
library(xmlwriter)
# read in a sample 600k xml file as a R list str
doc <- xml2::read_xml("./example/DataGeneric.xml")
doc_list <- xml2::as_list(doc)
# just copy the list and set an extra attribute class="xml_fragment"
# making it a xml_fragment object
doc_fragment <- structure(doc_list, class = "xml_fragment")
doc_list |> xml2::as_xml_document()
doc2_list |> xml2::as_xml_document()
doc_fragment |> xml2::as_xml_document()
microbenchmark(
xml2      = xml2::as_xml_document(doc_list),
xmlwriter = xml2::as_xml_document(doc_fragment),
times.    = 10
)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
pkgload::dev_help('read_fragment')
xml_fragment(a = ">beter")
xml_fragment(a = ">beter") |> as.character()
xml_fragment(a = ">beter") |> as_xml_document()
xml_fragment(a = ">beter") |> as_xml_document()
xml_fragment(a = ">beter") |> as_xml_document() |> as.character()
library(microbenchmark)
library(xml2)
library(microbenchmark)
library(xml2)
library(xmlwriter)
doc_fragment = read_fragment("./example/estat_nama_10_gdp_filtered.xml")
devtools::load_all(".")
doc_fragment = read_fragment("./example/estat_nama_10_gdp_filtered.xml")
write_xml(doc_fragment, "example/test.xml")
devtools::load_all(".")
devtools::load_all(".")
write_xml(doc_fragment, "example/test.xml")
doc_fragment = xmlwriter::read_fragment("./example/estat_nama_10_gdp_filtered.xml")
doc <- xml2::read_xml("./example/estat_nama_10_gdp_filtered.xml")
doc_list <- xml2::as_list(doc)
xml2::write_xml(doc_fragment, "./example/estat_nama_10_gdp_filtered.xml")
microbenchmark(
xml2 = doc |> xml2::write_xml("./example/test1.xml"),
xml2_list = doc_list |> xml2::as_xml_document() |> xml2::write_xml("./example/test2.xml"),
xmlwriter = doc_fragment |> xmlwriter::write_xml("./example/test3.xml"),
times = 10
)
devtools::load_all(".")
microbenchmark(
xml2 = doc |> xml2::write_xml("./example/test1.xml"),
xml2_list = doc_list |> xml2::as_xml_document() |> xml2::write_xml("./example/test2.xml"),
xmlwriter = doc_fragment |> xml2::write_xml("./example/test3.xml"),
times = 10
)
devtools::load_all(".")
devtools::load_all(".")
doc <- xml_fragment(
study = .tags(
.attr = c(id="1"),
person = .tags(
.attr = c(id = "p1"),
name = "John Doe",
age = 30
),
person = .tags(
name = "Jane Doe",
age = 25,
address = .tags(street = "123 Main St", city = "Springfield"),
"This is a text node"
)
)
)
print(doc)
devtools::load_all(".")
print(doc)
as.character(doc)
cat(doc)
doc |> as.character() |> cat()
library(microbenchmark)
library(xml2)
library(xmlwriter)
# read in a sample 600k xml file as a R list str
doc <- xml2::read_xml("./example/DataGeneric.xml")
doc_list <- xml2::as_list(doc)
# just copy the list and set an extra attribute class="xml_fragment"
# making it a xml_fragment object
doc_fragment <- structure(doc_list, class = "xml_fragment")
# see how long it takes to create an xml document with xml2 and xmlwriter
microbenchmark(
xml2      = xml2::as_xml_document(doc_list),
xmlwriter = xml2::as_xml_document(doc_fragment),
times     = 10
)
devtools::run_examples()
fragment <- read_fragment("example/test.xml")
fragment
fragment <- read_fragment("example/estat_nama_10_gdp_filtered.xml")
fragment
devtools::load_all(".")
fragment
write_xml(fragment)
write_xml(fragment, "")
tinytest::test_all()
library(xmlwriter)
library(tinytest)
library(xmlwriter)
fragment <- xml_fragment(
person = .tags(
name = "John Doe",
age = 30
)
)
expect_equal(
as.character(fragment),
"<person><name>John Doe</name><age>30</age></person>"
)
as.character(fragment)
expect_equal(
as.character(fragment),
"<person>\n  <name>John Doe</name>\n  <age>30</age>\n</person>"
)
fragment <- xml_fragment(
person = .tags(
.attr = c(id = "id", test = "test"),
name = "John Doe",
age = 30
)
)
expect_equal(
as.character(fragment),
"<person id=\"id\" test=\"test\"><name>John Doe</name><age>30</age></person>"
)
as.character(fragment)
expect_equal(
as.character(fragment),
"<person id=\"id\" test=\"test\">\n  <name>John Doe</name>\n  <age>30</age>\n</person>"
)
fragment <- xml_fragment(
person = .tags(
name = "John Doe",
age = 30,
address = .tags(street = "123 Main St", city = "Springfield"),
"This is a text node"
)
)
as.character(fragment)
expect_equal(
as.character(fragment),
"<person>\n  <name>John Doe</name>\n  <age>30</age>\n  <address>\n    <street>123 Main St</street>\n    <city>Springfield</city>\n  </address>This is a text node\n</person>"
)
fragment <- xml_fragment(
person = .tags(
name = "John Doe",
age = 30,
address = .tags(street = "123 Main St", city = "Springfield"),
"This is a text node"
),
person = .tags(
name = "Jane Doe",
age = 25,
address = .tags(street = "123 Main St", city = "Springfield"),
"This is a text node"
)
)
as.character(fragment)
expect_equal(
as.character(fragment),
c("<person>\n  <name>John Doe</name>\n  <age>30</age>\n  <address>\n    <street>123 Main St</street>\n    <city>Springfield</city>\n  </address>This is a text node\n</person>","<person>\n  <name>Jane Doe</name>\n  <age>25</age>\n  <address>\n    <street>123 Main St</street>\n    <city>Springfield</city>\n  </address>This is a text node\n</person>")
)
expect_error(
doc <- xml_doc(
person = .tags(
name = "John Doe",
age = 30,
address = .tags(street = "123 Main St", city = "Springfield"),
"This is a text node"
),
person = .tags(
name = "Jane Doe",
age = 25,
address = .tags(street = "123 Main St", city = "Springfield"),
"This is a text node"
)
),
)
test_all()
test_all()
